// Copyright (C) 2024 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page creator-how-to-use-compilation-databases.html
    \previouspage creator-how-tos.html

    \ingroup creator-how-to-build

    \title Use compilation databases

    The \l{https://clang.llvm.org/docs/JSONCompilationDatabase.html}
    {JSON compilation database format} specifies how to replay single builds
    independently of the build system.

    A \e {compilation database} is basically a list of files and the compiler
    flags that are used to compile the files. The database is used to feed the
    code model with the necessary information for correctly parsing the code
    when you open a file for editing.

    To open a compilation database as a \l {Managing Projects}{project}, go to
    \uicontrol File > \uicontrol {Open File or Project} and select a compilation
    database JSON file.

    To generate a compilation database from the information that the code model
    has, select \uicontrol Build > \uicontrol {Run Generator} > \uicontrol {Compilation Database}.

    You can add files, such as non-C files, to the project in
    \e {compile_database.json.files}.

    You can use the experimental Compilation Database Project Manager to open
    the files in a compilation database with access to all the editing features
    of the Clang code model.

    \note Enable the Compilation Database Project Manager plugin to use it.

    To switch between header and source files, select \uicontrol Tools >
    \uicontrol C++ > \uicontrol {Switch Header/Source}.

    You can specify custom build steps and run settings for compilation
    database projects in the \uicontrol Projects mode.

    \sa {Enable and disable plugins}, {Add custom build steps},
    {Configure projects for running}, {Code Model}, {Configuring Projects}
*/
